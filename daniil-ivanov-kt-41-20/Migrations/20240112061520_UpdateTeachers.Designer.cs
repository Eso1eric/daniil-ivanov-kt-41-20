// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using daniil_ivanov_kt_41_20.Database;

#nullable disable

namespace daniil_ivanov_kt_41_20.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20240112061520_UpdateTeachers")]
    partial class UpdateTeachers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("Идентификатор ученой степени");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_name")
                        .HasComment("Название ученой степени");

                    b.HasKey("Id")
                        .HasName("pk_cs_degrees_degree_id");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("d_createdate")
                        .HasComment("Дата основания");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_fullname")
                        .HasComment("Полное наименование");

                    b.Property<int>("HeadTeacherId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("c_shortname")
                        .HasComment("Краткое наименование");

                    b.HasKey("Id")
                        .HasName("pk_cs_departments_department_id");

                    b.HasIndex(new[] { "HeadTeacherId" }, "idx_cs_departments_fk_f_headteacher_id");

                    b.ToTable("cs_departments", (string)null);
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasComment("Идентификатор должности");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_name")
                        .HasComment("Название должности");

                    b.HasKey("Id")
                        .HasName("pk_cs_positions_position_id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_name")
                        .HasComment("Название дисциплины");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_cs_subjects_subject_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_cs_subjects_fk_f_teacher_id");

                    b.ToTable("cs_subjects", (string)null);
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DegreeId")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_lastname")
                        .HasComment("Отчество");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_name")
                        .HasComment("Имя");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_surname")
                        .HasComment("Фамилия");

                    b.HasKey("Id")
                        .HasName("pk_cd_teachers_teacher_id");

                    b.HasIndex(new[] { "DegreeId" }, "idx_cd_teachers_fk_f_degree_id");

                    b.HasIndex(new[] { "DepartmentId" }, "idx_cd_teachers_fk_f_department_id");

                    b.HasIndex(new[] { "PositionId" }, "idx_cd_teachers_fk_f_position_id");

                    b.ToTable("cd_teachers", (string)null);
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int>("Hours")
                        .HasColumnType("int4")
                        .HasColumnName("n_hours")
                        .HasComment("Кол-во часов");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_cd_workloads_workload_id");

                    b.HasIndex(new[] { "DepartmentId" }, "idx_cd_workloads_fk_f_department_id");

                    b.HasIndex(new[] { "SubjectId" }, "idx_cd_workloads_fk_f_subject_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_cd_workloads_fk_f_teacher_id");

                    b.ToTable("cd_workloads", (string)null);
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Department", b =>
                {
                    b.HasOne("daniil_ivanov_kt_41_20.Model.Teacher", "HeadTeacher")
                        .WithMany()
                        .HasForeignKey("HeadTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_headteacher_id");

                    b.Navigation("HeadTeacher");
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Subject", b =>
                {
                    b.HasOne("daniil_ivanov_kt_41_20.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_teacher_id");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Teacher", b =>
                {
                    b.HasOne("daniil_ivanov_kt_41_20.Model.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_degree_id");

                    b.HasOne("daniil_ivanov_kt_41_20.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("daniil_ivanov_kt_41_20.Model.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_position_id");

                    b.Navigation("Degree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("daniil_ivanov_kt_41_20.Model.Workload", b =>
                {
                    b.HasOne("daniil_ivanov_kt_41_20.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("daniil_ivanov_kt_41_20.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_subject_id");

                    b.HasOne("daniil_ivanov_kt_41_20.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_teacher_id");

                    b.Navigation("Department");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
